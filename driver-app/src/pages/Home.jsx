import { Link } from 'react-router-dom'
import { useQuery } from '@tanstack/react-query'
import { firestoreService } from '../services/firestore'
import { auth } from '../services/firebase'

export default function Home() {
  // L·∫•y l·ªãch s·ª≠ giao d·ªãch g·∫ßn ƒë√¢y
  const { data: recentTransactions = [], isLoading } = useQuery({
    queryKey: ['recentTransactions', auth.currentUser?.uid],
    queryFn: async () => {
      if (!auth.currentUser?.uid) return [];
      try {
        return await firestoreService.getTransactionHistory(auth.currentUser.uid, 3);
      } catch (error) {
        console.warn('Failed to load recent transactions:', error);
        return [];
      }
    },
    enabled: !!auth.currentUser?.uid,
    retry: false
  })

  return (
    <div className="space-y-6">
      {/* Welcome Section */}
      <div className="card glass">
        <div className="text-center">
          <div className="text-6xl mb-4 text-glow">‚ö°</div>
          <h1 className="text-3xl font-bold heading-gradient mb-3">
            Ch√†o m·ª´ng ƒë·∫øn v·ªõi EV Driver!
          </h1>
          <p className="text-gray-600 font-medium">
            T√¨m tr·∫°m s·∫°c v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh xanh c·ªßa b·∫°n
          </p>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Link to="/find-station" className="card glass hover:shadow-lg transition-all station-card">
          <div className="text-center">
            <div className="text-5xl mb-4 text-glow">üó∫Ô∏è</div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              B·∫£n ƒë·ªì tr·∫°m s·∫°c
            </h3>
            <p className="text-gray-600 text-sm">
              Xem tr·∫°m s·∫°c g·∫ßn b·∫°n tr√™n b·∫£n ƒë·ªì t∆∞∆°ng t√°c
            </p>
          </div>
        </Link>

        <Link to="/find-station" className="card glass hover:shadow-lg transition-all station-card">
          <div className="text-center">
            <div className="text-5xl mb-4 text-glow">üîç</div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              T√¨m tr·∫°m s·∫°c
            </h3>
            <p className="text-gray-600 text-sm">
              Nh·∫≠p m√£ tr·∫°m ho·∫∑c qu√©t QR code ƒë·ªÉ k·∫øt n·ªëi
            </p>
          </div>
        </Link>

        <Link to="/history" className="card glass hover:shadow-lg transition-all station-card">
          <div className="text-center">
            <div className="text-5xl mb-4 text-glow">üìä</div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              L·ªãch s·ª≠ s·∫°c
            </h3>
            <p className="text-gray-600 text-sm">
              Xem t·∫•t c·∫£ phi√™n s·∫°c v√† h√≥a ƒë∆°n c·ªßa b·∫°n
            </p>
          </div>
        </Link>

        <Link to="/debug-stations" className="card glass hover:shadow-lg transition-all station-card bg-gradient-to-r from-yellow-50 to-orange-50">
          <div className="text-center">
            <div className="text-5xl mb-4 text-glow">üîß</div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              Debug Stations
            </h3>
            <p className="text-gray-600 text-sm">
              Xem t·∫•t c·∫£ d·ªØ li·ªáu tr·∫°m s·∫°c trong Firebase
            </p>
          </div>
        </Link>
      </div>

      {/* Recent Transactions */}
      <div className="card glass">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold text-gray-900">
            ‚ö° Phi√™n s·∫°c g·∫ßn ƒë√¢y
          </h2>
          <Link to="/history" className="text-blue-600 hover:text-blue-500 text-sm font-medium">
            Xem t·∫•t c·∫£ ‚Üí
          </Link>
        </div>

        {isLoading ? (
          <div className="space-y-3">
            {[1, 2, 3].map(i => (
              <div key={i} className="animate-pulse">
                <div className="h-16 bg-gray-200 rounded"></div>
              </div>
            ))}
          </div>
        ) : recentTransactions.length > 0 ? (
          <div className="space-y-3">
            {recentTransactions.map(tx => (
              <Link
                key={tx.id}
                to={`/receipt/${tx.txId}`}
                className="block p-3 bg-gray-50 hover:bg-gray-100 rounded transition-colors"
              >
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium text-gray-900">
                      {tx.stationId} - Connector {tx.connectorId}
                    </div>
                    <div className="text-sm text-gray-600">
                      {tx.energyKwh?.toFixed(2)} kWh ‚Ä¢ {new Date(tx.stopTs?.toDate ? tx.stopTs.toDate() : tx.stopTs).toLocaleDateString('vi-VN')}
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="font-semibold text-gray-900">
                      {new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                      }).format(tx.amountVnd || 0)}
                    </div>
                    <div className="text-xs text-gray-500">
                      {tx.status === 'completed' ? '‚úÖ Ho√†n th√†nh' : '‚è≥ ƒêang x·ª≠ l√Ω'}
                    </div>
                  </div>
                </div>
              </Link>
            ))}
          </div>
        ) : (
          <div className="text-center py-8 text-gray-500">
            <div className="text-4xl mb-2">üîã</div>
            <p>B·∫°n ch∆∞a c√≥ phi√™n s·∫°c n√†o</p>
            <p className="text-sm">H√£y t√¨m tr·∫°m s·∫°c ƒë·ªÉ b·∫Øt ƒë·∫ßu!</p>
          </div>
        )}
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
        <div className="card text-center">
          <div className="text-2xl font-bold text-blue-600">
            {recentTransactions.length}
          </div>
          <div className="text-sm text-gray-600">T·ªïng phi√™n s·∫°c</div>
        </div>

        <div className="card text-center">
          <div className="text-2xl font-bold text-green-600">
            {recentTransactions.reduce((total, tx) => total + (tx.energyKwh || 0), 0).toFixed(1)}
          </div>
          <div className="text-sm text-gray-600">kWh ƒë√£ s·∫°c</div>
        </div>

        <div className="card text-center col-span-2 md:col-span-1">
          <div className="text-2xl font-bold text-purple-600">
            {new Intl.NumberFormat('vi-VN').format(
              recentTransactions.reduce((total, tx) => total + (tx.amountVnd || 0), 0)
            )}
          </div>
          <div className="text-sm text-gray-600">VND ƒë√£ chi</div>
        </div>
      </div>
    </div>
  )
}
